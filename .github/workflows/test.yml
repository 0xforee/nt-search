name: Test and Lint

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run linter fix
        run: npm run lint:fix

      - name: Check formatting
        run: npm run format:check

      - name: Build application
        run: npm run build

      - name: Test build output
        run: |
          if [ -d "dist" ]; then
            echo "‚úÖ Build successful - dist directory exists"
            ls -la dist/
          else
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi

  docker-test:
    runs-on: ubuntu-latest
    name: Test Docker Build
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (Alpine)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          tags: nt-search:test-alpine
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker image (Debian)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.debian
          platforms: linux/amd64
          push: false
          tags: nt-search:test-debian
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Alpine image
        run: |
          docker run --rm -d --name test-alpine -p 3001:3000 nt-search:test-alpine
          sleep 10
          curl -f http://localhost:3001/health || exit 1
          docker stop test-alpine

      - name: Test Debian image
        run: |
          docker run --rm -d --name test-debian -p 3002:3000 nt-search:test-debian
          sleep 10
          curl -f http://localhost:3002/health || exit 1
          docker stop test-debian

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  quality-gate:
    runs-on: ubuntu-latest
    name: Quality Gate
    needs: [test, docker-test, security-scan]
    if: always()
    
    steps:
      - name: Check all jobs
        run: |
          if [ "${{ needs.test.result }}" = "success" ] && [ "${{ needs.docker-test.result }}" = "success" ]; then
            echo "‚úÖ All quality gates passed!"
            echo "üéâ Ready for deployment"
          else
            echo "‚ùå Quality gates failed!"
            echo "Test result: ${{ needs.test.result }}"
            echo "Docker test result: ${{ needs.docker-test.result }}"
            exit 1
          fi
